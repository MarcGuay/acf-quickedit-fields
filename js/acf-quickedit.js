!function d(o,s,l){function r(t,e){if(!s[t]){if(!o[t]){var i="function"==typeof require&&require;if(!e&&i)return i(t,!0);if(u)return u(t,!0);var n=new Error("Cannot find module '"+t+"'");throw n.code="MODULE_NOT_FOUND",n}var a=s[t]={exports:{}};o[t][0].call(a.exports,function(e){return r(o[t][1][e]||e)},a,a.exports,d,o,s,l)}return s[t].exports}for(var u="function"==typeof require&&require,e=0;e<l.length;e++)r(l[e]);return r}({1:[function(e,t,i){(function(e){"use strict";var t,d=(t="undefined"!=typeof window?window.jQuery:void 0!==e?e.jQuery:null)&&t.__esModule?t:{default:t};(0,d.default)(".acf-qef-gallery-col").on("mousemove",function(e){(0,d.default)(this);var t=(0,d.default)(this).find("img"),i=e.offsetX,n=t.length,a=(0,d.default)(this).width()/n;t.each(function(e,t){a*e<=i?(0,d.default)(t).show():(0,d.default)(t).hide()})})}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],2:[function(c,e,t){(function(e){"use strict";var d=t("undefined"!=typeof window?window.jQuery:void 0!==e?e.jQuery:null),o=t(c("base.js"));function t(e){return e&&e.__esModule?e:{default:e}}function s(e){return(s="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}if(c("../acf-columns/index.js"),"undefined"!=typeof inlineEditPost){var a=inlineEditPost.edit,i=inlineEditPost.save,n=inlineEditPost.revert,l=inlineEditPost.setBulk;inlineEditPost.edit=function(e){var t,i,n;return acf.validation.active=1,n=a.apply(this,arguments),t=0,"object"===s(e)&&(t=parseInt(this.getId(e))),i=(0,d.default)("#edit-"+t),this.acf_qed_form=new o.default.form.QuickEdit({el:i.get(0),object_id:t}),n},inlineEditPost.revert=function(){return this.acf_qed_form&&this.acf_qed_form.unload(),n.apply(this,arguments)},inlineEditPost.save=function(){return this.acf_qed_form&&this.acf_qed_form.unload(),i.apply(this,arguments)},inlineEditPost.setBulk=function(){var e=l.apply(this,arguments);return this.acf_qed_form=new o.default.form.BulkEdit({el:(0,d.default)("#bulk-edit").get(0)}),e}}if("undefined"!=typeof inlineEditTax){var r=inlineEditTax.edit,u=inlineEditTax.save,f=inlineEditTax.revert;inlineEditTax.edit=function(e){var t,i,n,a=(0,d.default)('input[name="taxonomy"]').val();return n=r.apply(this,arguments),t=0,"object"===s(e)&&(t=parseInt(this.getId(e))),i=(0,d.default)("#edit-"+t),this.acf_qed_form=new o.default.form.QuickEdit({el:i.get(0),object_id:a+"_"+t}),n},inlineEditTax.revert=function(){return this.acf_qed_form&&this.acf_qed_form.unload(),f.apply(this,arguments)},inlineEditTax.save=function(){return this.acf_qed_form&&this.acf_qed_form.unload(),u.apply(this,arguments)}}}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"../acf-columns/index.js":1,"base.js":3}],3:[function(d,o,e){(function(e){"use strict";var t=a("undefined"!=typeof window?window.jQuery:void 0!==e?e.jQuery:null),i=d("form.js"),n=a(d("fields.js"));function a(e){return e&&e.__esModule?e:{default:e}}t.default.extend(acf_qef,{form:i.form,field:n.default}),o.exports=acf_qef}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"fields.js":4,"form.js":20}],4:[function(k,b,e){(function(e){"use strict";var n=_("undefined"!=typeof window?window.jQuery:void 0!==e?e.jQuery:null),t=_(k("fields/button_group.js")),i=_(k("fields/checkbox.js")),a=_(k("fields/color_picker.js")),d=_(k("fields/date_picker.js")),o=_(k("fields/date_time_picker.js")),s=_(k("fields/file.js")),l=_(k("fields/image.js")),r=_(k("fields/link.js")),u=_(k("fields/radio.js")),f=_(k("fields/range.js")),c=_(k("fields/select.js")),p=_(k("fields/taxonomy.js")),h=_(k("fields/textarea.js")),y=_(k("fields/time_picker.js")),v=_(k("fields/true_false.js"));function _(e){return e&&e.__esModule?e:{default:e}}var m=wp.media.View.extend({events:{'change [type="checkbox"][data-is-do-not-change="true"]':"dntChanged"},initialize:function(){var e=this;Backbone.View.prototype.initialize.apply(this,arguments),this.key=this.$el.attr("data-key"),this.parent_key=this.$el.attr("data-parent-key"),"false"===this.parent_key&&(this.parent_key=!1),this.$input||(this.$input=this.$('input:not([data-is-do-not-change="true"])')),this.setEditable(!1),this.$("*").on("change",function(){e.resetError()})},setValue:function(e){return this.dntChanged(),this.$input.val(e),this},dntChanged:function(){this.setEditable(!this.$('[type="checkbox"][data-is-do-not-change="true"]').is(":checked"))},setEditable:function(i){this.$input.each(function(e,t){return(0,n.default)(t).prop("readonly",!i).prop("disabled",!i)})},setError:function(e){return this.$el.attr("data-error-message",e),this},resetError:function(){return this.$el.removeAttr("data-error-message"),this},unload:function(){},parent:function(){return m.prototype}}),w={},g={add_type:function(e){return w[e.type]=m.extend(e),w[e.type]},factory:function(e,t){var i=(0,n.default)(e).attr("data-field-type");return new(i in w?w[i]:m)({el:e,controller:t})},View:m};g.add_type(s.default),g.add_type(l.default),g.add_type(f.default),g.add_type(d.default),g.add_type(o.default),g.add_type(y.default),g.add_type(a.default),g.add_type(h.default),g.add_type(i.default),g.add_type(r.default),g.add_type(u.default),g.add_type(t.default),g.add_type(c.default),g.add_type(p.default),g.add_type(v.default),console.log(g),b.exports=g}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"fields/button_group.js":5,"fields/checkbox.js":6,"fields/color_picker.js":7,"fields/date_picker.js":8,"fields/date_time_picker.js":9,"fields/file.js":10,"fields/image.js":11,"fields/link.js":12,"fields/radio.js":13,"fields/range.js":14,"fields/select.js":15,"fields/taxonomy.js":16,"fields/textarea.js":17,"fields/time_picker.js":18,"fields/true_false.js":19}],5:[function(e,i,t){(function(e){"use strict";var t,a=(t="undefined"!=typeof window?window.jQuery:void 0!==e?e.jQuery:null)&&t.__esModule?t:{default:t};i.exports={type:"button_group",initialize:function(){this.$("ul");var n=this.$("li");this.$input=this.$('[type="radio"]'),this.parent().initialize.apply(this,arguments),this.$('[type="radio"]').prop("readonly",!0),this.$el.is('[data-allow-null="1"]')&&this.$el.on("click",'[type="radio"]',function(e){var t=(0,a.default)(this).closest("li"),i=t.hasClass("selected");n.removeClass("selected"),i?(0,a.default)(this).prop("checked",!1):t.addClass("selected")})},setValue:function(e){this.dntChanged(),this.$('[type="radio"][value="'+e+'"]').prop("checked",!0).closest("li").addClass("selected")}}}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],6:[function(e,a,t){(function(e){"use strict";var t,n=(t="undefined"!=typeof window?window.jQuery:void 0!==e?e.jQuery:null)&&t.__esModule?t:{default:t};var i={type:"checkbox",events:{"click .add-choice":"addChoice",'change [type="checkbox"].custom':"removeChoice"},initialize:function(){this.$input=this.$('[type="checkbox"]:not([value="___do_not_change"])'),this.$button=this.$("button.add-choice").prop("disabled",!0),this.parent().initialize.apply(this,arguments)},setEditable:function(e){this.$input.prop("disabled",!e),this.$button.prop("disabled",!e)},setValue:function(e){var i=this;this.dntChanged(),n.default.isArray(e)?n.default.each(e,function(e,t){i.$('[type="checkbox"][value="'+t+'"]').prop("checked",!0)}):this.$('[type="checkbox"][value="'+e+'"]').prop("checked",!0)},addChoice:function(e){e.preventDefault();var t=wp.template("acf-qef-custom-choice-"+this.$el.attr("data-key"));this.$("ul").append(t())},removeChoice:function(e){(0,n.default)(e.target).closest("li").remove()}};i.events['change [type="checkbox"][value="'+acf_qef.options.do_not_change_value+'"]']="dntChanged",a.exports=i}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],7:[function(e,n,t){(function(e){"use strict";var t,i=(t="undefined"!=typeof window?window.jQuery:void 0!==e?e.jQuery:null)&&t.__esModule?t:{default:t};n.exports={type:"color_picker",initialize:function(){var e=acf.apply_filters("color_picker_args",{defaultColor:!1,palettes:!0,hide:!0},this.$el);this.$input=this.$('[type="text"]').first().wpColorPicker(e),this.parent().initialize.apply(this,arguments)},setEditable:function(e){this.parent().setEditable.apply(this,arguments),this.$("button.wp-color-result").prop("disabled",!e)},setValue:function(e){this.dntChanged(),this.$input.wpColorPicker("color",e)},unload:function(){(0,i.default)("body").off("click.wpcolorpicker")}}}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],8:[function(e,n,t){(function(e){"use strict";var t,i=(t="undefined"!=typeof window?window.jQuery:void 0!==e?e.jQuery:null)&&t.__esModule?t:{default:t};n.exports={type:"date_picker",initialize:function(){var e=this;return this.$input=this.$('[type="text"]'),this.$hidden=this.$('[type="hidden"]'),this.parent().initialize.apply(this,arguments),this.datePickerArgs={dateFormat:this.$("[data-date_format]").data("date_format"),altFormat:"yymmdd",altField:this.$hidden,changeYear:!0,yearRange:"-100:+100",changeMonth:!0,showButtonPanel:!0,firstDay:this.$("[data-first_day]").data("first_day")},this.$input.datepicker(this.datePickerArgs).on("blur",function(){(0,i.default)(this).val()||e.$hidden.val("")}),0<(0,i.default)("body > #ui-datepicker-div").length&&(0,i.default)("#ui-datepicker-div").wrap('<div class="acf-ui-datepicker" />'),this},setEditable:function(e){this.parent().setEditable.apply(this,arguments),this.$hidden.prop("disabled",!e)},setValue:function(e){var t;this.dntChanged();try{t=i.default.datepicker.parseDate(this.datePickerArgs.altFormat,e)}catch(e){return this}return this.$input.datepicker("setDate",t),this}}}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],9:[function(e,i,t){(function(e){"use strict";var t,a=(t="undefined"!=typeof window?window.jQuery:void 0!==e?e.jQuery:null)&&t.__esModule?t:{default:t};i.exports={type:"date_time_picker",initialize:function(){var e=this;return this.$input=this.$('[type="text"]'),this.$hidden=this.$('[type="hidden"]'),this.parent().initialize.apply(this,arguments),this.datePickerArgs={altField:this.$hidden,dateFormat:this.$("[data-date_format]").data("date_format"),altFormat:"yy-mm-dd",timeFormat:this.$("[data-time_format]").data("time_format"),altTimeFormat:"HH:mm:ss",altFieldTimeOnly:!1,changeYear:!0,yearRange:"-100:+100",changeMonth:!0,showButtonPanel:!0,firstDay:this.$("[data-first_day]").data("first_day"),controlType:"select",oneLine:!0},this.$input.datetimepicker(this.datePickerArgs).on("blur",function(){(0,a.default)(this).val()||e.$hidden.val("")}),0<(0,a.default)("body > #ui-datepicker-div").length&&(0,a.default)("#ui-datepicker-div").wrap('<div class="acf-ui-datepicker" />'),this},setEditable:function(e){this.parent().setEditable.apply(this,arguments),this.$hidden.prop("disabled",!e)},setValue:function(e){var t,i,n;this.dntChanged();try{t=a.default.datepicker.parseDateTime(this.datePickerArgs.altFormat,this.datePickerArgs.altTimeFormat,e)}catch(e){return this}if(t)return n={hour:t.getHours(),minute:t.getMinutes(),second:t.getSeconds(),millisec:t.getMilliseconds(),microsec:0,timezone:t.getTimezoneOffset()},i=a.default.datepicker.formatDate(this.datePickerArgs.dateFormat,t)+" "+a.default.datepicker.formatTime(this.datePickerArgs.timeFormat,n),this.$hidden.val(e),this.$input.val(i),this}}}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],10:[function(e,n,t){(function(e){"use strict";var t,a=(t="undefined"!=typeof window?window.jQuery:void 0!==e?e.jQuery:null)&&t.__esModule?t:{default:t};var i={type:"file",mediaFrameType:"",events:{"click .select-media":"selectFile","click .remove-media":"removeFile"},initialize:function(){this.$input=this.$("button"),this.$hidden=this.$('[type="hidden"]'),this.$img=(0,a.default)("<img />").prependTo(this.$(".file-content")),this.parent().initialize.apply(this,arguments);var i=this,e=acf.get("post_id");this.mediaFrameOpts={field:this.key,multiple:!1,post_id:e,library:this.$hidden.attr("data-library"),mode:"select",type:this.mediaFrameType,select:function(e,t){e&&i.setValue(e.get("id"))}},this.$hidden.data("mime_types")&&(this.mediaFrameOpts.mime_types=this.$hidden.data("mime_types"))},selectFile:function(e){e.preventDefault();var i=acf.media.popup(this.mediaFrameOpts),n=this.$hidden.val();n&&i.on("open",function(){var e=i.state().get("selection"),t=wp.media.attachment(n);t.fetch(),e.add(t?[t]:[])}),acf.isset(window,"wp","media","view","settings","post")&&a.default.isNumeric(this.mediaFrameOpts.post_id)&&(wp.media.view.settings.post.id=this.mediaFrameOpts.post_id)},removeFile:function(e){e.preventDefault(),this.setValue("")},setValue:function(e){var i=this;return this.dntChanged(),(e=parseInt(e))?(this.$hidden.val(e),wp.media.attachment(e).fetch().then(function(e){var t;t=e.sizes?e.sizes.thumbnail.url:e.icon,i.$img.attr("src",t),i.$(".media-mime").text(e.mime),i.$(".media-title").text(e.title)})):this.$hidden.val(""),this}};i.events['change [type="checkbox"][value="'+acf_qef.options.do_not_change_value+'"]']="dntChanged",n.exports=i}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],11:[function(e,t,i){"use strict";var n,a=(n=e("./file.js"))&&n.__esModule?n:{default:n};t.exports=_.extend({},a.default,{type:"image",mediaFrameType:"image"})},{"./file.js":10}],12:[function(e,a,t){(function(e){"use strict";var t,n=(t="undefined"!=typeof window?window.jQuery:void 0!==e?e.jQuery:null)&&t.__esModule?t:{default:t};var i={type:"link",events:{"click .select-link":"selectLink","click .remove-link":"resetLink"},initialize:function(){this.$input=this.$("[data-link-prop],button"),this.parent().initialize.apply(this,arguments),this.$display=this.$(".link-content")},resetLink:function(e){e.preventDefault(),this.$input.val(""),this.render()},selectLink:function(e){e.preventDefault();var t=this.$("a");t.length||(t=(0,n.default)("<a></a>").appendTo(this.$display)),(0,n.default)(document).on("wplink-close",this,this.parseCB),acf.wpLink.open(t)},setValue:function(e){var i=this;this.dntChanged(),n.default.each(e,function(e,t){return i.$('[data-link-prop="'+e+'"]').val(t)}),this.render()},parseCB:function(e){var t=e.data;setTimeout(function(){t.parse()},1),(0,n.default)(document).off("wplink-close",e.data.parseCB)},parse:function(){var e=this.$("a");this.$('[data-link-prop="target"]').val(e.attr("target")),this.$('[data-link-prop="url"]').val(e.attr("href")),this.$('[data-link-prop="title"]').val(e.html())},render:function(){var e="",t=self.$('[data-link-prop="target"]').val(),i=self.$('[data-link-prop="url"]').val(),n=self.$('[data-link-prop="title"]').val()||i;i&&(t=t?'target="'.concat(t,'"'):"",e='<a href="'.concat(i,'"').concat(t,">").concat(n,"</a>")),this.$display.html(e)}};i.events['change [type="checkbox"][value="'+acf_qef.options.do_not_change_value+'"]']="dntChanged",a.exports=i}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],13:[function(e,i,t){(function(e){"use strict";var t,n=(t="undefined"!=typeof window?window.jQuery:void 0!==e?e.jQuery:null)&&t.__esModule?t:{default:t};i.exports={type:"radio",initialize:function(){var t,i;this.$input=this.$('[type="radio"]'),this.parent().initialize.apply(this,arguments),this.$('[type="radio"]').prop("readonly",!0),this.$("ul.acf-radio-list.other").length&&(t=this.$('[type="text"]'),this.$('[type="radio"]').on("change",function(e){i=(0,n.default)(this).is('[value="other"]:checked'),t.prop("disabled",!i).prop("readonly",!i)}))},setValue:function(e){this.dntChanged(),this.$('[type="radio"][value="'+e+'"]').prop("checked",!0)}}}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],14:[function(e,n,t){(function(e){"use strict";var t;(t="undefined"!=typeof window?window.jQuery:void 0!==e?e.jQuery:null)&&t.__esModule;var i={type:"range",events:{'change [type="range"]':"adaptNumber",'mousemove [type="range"]':"adaptNumber",'change [type="number"]':"adaptRange",'mousemove [type="number"]':"adaptRange"},adaptNumber:function(){this.$('[type="number"]').val(this.$('[type="range"]').val())},adaptRange:function(){this.$('[type="range"]').val(this.$('[type="number"]').val())}};i.events['change [type="checkbox"][value="'+acf_qef.options.do_not_change_value+'"]']="dntChanged",n.exports=i}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],15:[function(e,i,t){(function(e){"use strict";var t;(t="undefined"!=typeof window?window.jQuery:void 0!==e?e.jQuery:null)&&t.__esModule;i.exports={type:"select",initialize:function(){this.parent().initialize.apply(this,arguments),this.$input=this.$("select").prop("readonly",!0)}}}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],16:[function(e,i,t){(function(e){"use strict";var t,n=(t="undefined"!=typeof window?window.jQuery:void 0!==e?e.jQuery:null)&&t.__esModule?t:{default:t};i.exports={type:"taxonomy",initialize:function(){this.parent().initialize.apply(this,arguments),this.$input=this.$('select,input[value!="'+acf_qef.options.do_not_change_value+'"]').prop("readonly",!0)},setValue:function(e){var i=this;this.dntChanged(),"number"==typeof e&&(e=[e]),n.default.each(e,function(e,t){i.$('[value="'+t+'"]').each(function(e,t){(0,n.default)(this).is('[type="radio"],[type="checkbox"]')?(0,n.default)(this).prop("checked",!0):(0,n.default)(this).is("option")&&(0,n.default)(this).prop("selected",!0)})})}}}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],17:[function(e,i,t){(function(e){"use strict";var t;(t="undefined"!=typeof window?window.jQuery:void 0!==e?e.jQuery:null)&&t.__esModule;i.exports={type:"textarea",initialize:function(){this.$input=this.$("textarea").prop("readonly",!0),this.parent().initialize.apply(this,arguments),this.$input.on("keydown keyup",function(e){13!=e.which&&27!=e.which||e.stopPropagation()})}}}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],18:[function(e,n,t){(function(e){"use strict";var t,i=(t="undefined"!=typeof window?window.jQuery:void 0!==e?e.jQuery:null)&&t.__esModule?t:{default:t};n.exports={type:"time_picker",initialize:function(){var e=this;return this.$input=this.$('[type="text"]'),this.$hidden=this.$('[type="hidden"]'),this.parent().initialize.apply(this,arguments),this.datePickerArgs={timeFormat:this.$("[data-time_format]").data("time_format"),altTimeFormat:"HH:mm:ss",altField:this.$hidden,altFieldTimeOnly:!1,showButtonPanel:!0,controlType:"select",oneLine:!0},this.$input.timepicker(this.datePickerArgs).on("blur",function(){(0,i.default)(this).val()||e.$hidden.val("")}),0<(0,i.default)("body > #ui-datepicker-div").length&&(0,i.default)("#ui-datepicker-div").wrap('<div class="acf-ui-datepicker" />'),this},setEditable:function(e){this.parent().setEditable.apply(this,arguments),this.$hidden.prop("disabled",!e)},setValue:function(e){var t;this.dntChanged();try{t=i.default.datepicker.parseTime(this.datePickerArgs.altTimeFormat,e)}catch(e){return this}if(t)return this.$hidden.val(e),this.$input.val(i.default.datepicker.formatTime(this.datePickerArgs.timeFormat,t)),this}}}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],19:[function(e,i,t){(function(e){"use strict";var t;(t="undefined"!=typeof window?window.jQuery:void 0!==e?e.jQuery:null)&&t.__esModule;i.exports={type:"true_false",initialize:function(){this.parent().initialize.apply(this,arguments),this.$('[type="radio"]').prop("readonly",!0)},setValue:function(e){this.dntChanged(),!0!==e&&!1!==e||this.$('[type="radio"][value="'+Number(e)+'"]').prop("checked",!0)}}}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],20:[function(s,l,e){(function(e){"use strict";var t,n=(t="undefined"!=typeof window?window.jQuery:void 0!==e?e.jQuery:null)&&t.__esModule?t:{default:t},a=s("fields.js");var i=Backbone.View.extend({events:{"heartbeat-send.wp-refresh-nonces":"heartbeatListener"},initialize:function(e){var n=this;this.active=!0,this.options=e,Backbone.View.prototype.initialize.apply(this,arguments),this.fields={},this.$(".inline-edit-col-qed [data-key]").each(function(e,t){var i=(0,a.factory)(t,this);n.fields[i.key]=i}),Object.keys(this.fields).length&&this.loadValues()},getFieldsToLoad:function(){var i=[];return _.each(this.fields,function(e,t){i.push(e.key)}),i},loadedValues:function(e){this.active&&(this._setValues(e),this.initValidation())},_setValues:function(e){var i=this;_.each(e,function(e,t){t in i.fields?i.fields[t].setValue(e):_.isObject(e)&&i._setValues(e)})},unload:function(e){this.deinitValidation(),_.each(this.fields,function(e){e.unload()}),this.active=!1,acf.unload.reset()},validationComplete:function(e,t){var n=this;return e.valid?acf.unload.off():_.each(e.errors,function(e){var t=e.input.match(/\[([0-9a-z_]+)\]$/g),i=!!t&&t[0].substring(1,t[0].length-1);i in n.fields&&n.fields[i].setError(e.message)}),e},deinitValidation:function(){this.getSaveButton().off("click",this._saveBtnClickHandler)},initValidation:function(){var e=this.$el.closest("form"),t=this.getSaveButton();t.length&&(acf.update("post_id",this.options.object_id),acf.addFilter("validation_complete",this.validationComplete,10,this),t.on("click",this._saveBtnClickHandler),e.data("acf",null),n.default._data(t[0],"events").click.reverse())},_saveBtnClickHandler:function(e){var t=(0,n.default)(this),i=(0,n.default)(this).closest("form");return!!acf.validateForm({form:i,event:!1,reset:!1,success:function(e){t.trigger("click")}})||(e.preventDefault(),e.stopPropagation(),e.stopImmediatePropagation(),!1)}}),d=i.extend({loadValues:function(){var t=this,e=_.extend({},acf_qef.options.request,{object_id:this.options.object_id,acf_field_keys:this.getFieldsToLoad(),_wp_http_referrer:(0,n.default)('[name="_wp_http_referer"]:first').val()});return n.default.post({url:ajaxurl,data:e,success:function(e){t.loadedValues(e.data)}}),this},getSaveButton:function(){return this.$el.closest("form").find("button.save")}}),o=i.extend({initialize:function(){i.prototype.initialize.apply(this,arguments),acf.add_filter("prepare_for_ajax",this.prepareForAjax,null,this)},prepareForAjax:function(i){return i.acf&&n.default.each(i.acf,function(e,t){t==acf_qef.options.do_not_change_value&&delete i.acf[e]}),i},loadValues:function(){var e=[];(0,n.default)('[type="checkbox"][name="post[]"]:checked').each(function(){e.push((0,n.default)(this).val())});var t=this,i=_.extend({},acf_qef.options.request,{object_id:e,acf_field_keys:this.getFieldsToLoad(),_wp_http_referrer:(0,n.default)('[name="_wp_http_referer"]:first').val()});return n.default.post({url:ajaxurl,data:i,success:function(e){t.loadedValues(e.data)}}),this},getSaveButton:function(){return this.$('[type="submit"]#bulk_edit')}});l.exports={form:{BulkEdit:o,QuickEdit:d}}}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"fields.js":4}]},{},[2]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
