!function d(o,s,l){function r(e,t){if(!s[e]){if(!o[e]){var i="function"==typeof require&&require;if(!t&&i)return i(e,!0);if(u)return u(e,!0);var a=new Error("Cannot find module '"+e+"'");throw a.code="MODULE_NOT_FOUND",a}var n=s[e]={exports:{}};o[e][0].call(n.exports,function(t){return r(o[e][1][t]||t)},n,n.exports,d,o,s,l)}return s[e].exports}for(var u="function"==typeof require&&require,t=0;t<l.length;t++)r(l[t]);return r}({1:[function(u,t,e){(function(t){"use strict";var d=e("undefined"!=typeof window?window.jQuery:void 0!==t?t.jQuery:null),o=e(u("qef-fields.js"));function e(t){return t&&t.__esModule?t:{default:t}}function s(t){return(s="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}if(u("qef-thumbnail-col.js"),"undefined"!=typeof inlineEditPost){var n=inlineEditPost.edit,i=inlineEditPost.save,a=inlineEditPost.revert,l=inlineEditPost.setBulk;inlineEditPost.edit=function(t){var e,i,a;return acf.validation.active=1,a=n.apply(this,arguments),e=0,"object"===s(t)&&(e=parseInt(this.getId(t))),i=(0,d.default)("#edit-"+e),this.acf_qed_form=new o.default.form.QuickEdit({el:i.get(0),object_id:e}),a},inlineEditPost.revert=function(){return this.acf_qed_form&&this.acf_qed_form.unload(),a.apply(this,arguments)},inlineEditPost.save=function(){return this.acf_qed_form&&this.acf_qed_form.unload(),i.apply(this,arguments)},inlineEditPost.setBulk=function(){var t=l.apply(this,arguments);return this.acf_qed_form=new o.default.form.BulkEdit({el:(0,d.default)("#bulk-edit").get(0)}),t}}if("undefined"!=typeof inlineEditTax){var r=inlineEditTax.edit;i=inlineEditTax.save,a=inlineEditTax.revert;inlineEditTax.edit=function(t){var e,i,a,n=(0,d.default)('input[name="taxonomy"]').val();return a=r.apply(this,arguments),e=0,"object"===s(t)&&(e=parseInt(this.getId(t))),i=(0,d.default)("#edit-"+e),this.acf_qed_form=new o.default.form.QuickEdit({el:i.get(0),object_id:n+"_"+e}),a},inlineEditTax.revert=function(){return this.acf_qed_form&&this.acf_qed_form.unload(),a.apply(this,arguments)},inlineEditTax.save=function(){return this.acf_qed_form&&this.acf_qed_form.unload(),i.apply(this,arguments)}}}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"qef-fields.js":3,"qef-thumbnail-col.js":4}],2:[function(t,i,e){(function(t){"use strict";var e,n=(e="undefined"!=typeof window?window.jQuery:void 0!==t?t.jQuery:null)&&e.__esModule?e:{default:e};var d={form:{},field:{_types:{},add_type:function(t){return d.field._types[t.type]=d.field.View.extend(t),d.field._types[t.type]},factory:function(t,e){var i=(0,n.default)(t).attr("data-field-type"),a=d.field._types;return new(i in a?a[i]:d.field.View)({el:t,controller:e})}}};d.form.View=Backbone.View.extend({events:{"heartbeat-send.wp-refresh-nonces":"heartbeatListener"},initialize:function(t){var a=this;this.options=t,Backbone.View.prototype.initialize.apply(this,arguments),this.fields={},this.$(".inline-edit-col-qed [data-key]").each(function(t,e){var i=d.field.factory(e,this);a.fields[i.key]=i}),(0,n.default)(document).on("heartbeat-send.wp-refresh-nonces",this,this.heartbeatListener),wp.heartbeat.connectNow(),this.loadValues()},heartbeatListener:function(t,e){console.log(this,arguments),e["wp-refresh-post-nonces"]={post_id:t.data.options.object_id}},getFieldsToLoad:function(){var i=[];return _.each(this.fields,function(t,e){t.parent_key?i.push(t.parent_key):i.push(t.key)}),i},loadedValues:function(t){this._setValues(t),this.initValidation()},_setValues:function(t){var i=this;_.each(t,function(t,e){e in i.fields?i.fields[e].setValue(t):_.isObject(t)&&i._setValues(t)})},unload:function(t){this.deinitValidation(),_.each(this.fields,function(t){t.unload()}),(0,n.default)(document).off("heartbeat-send.wp-refresh-nonces",this.heartbeatListener),acf.unload.reset()},validationComplete:function(t,e){var a=this;return t.valid?acf.unload.off():_.each(t.errors,function(t){var e=t.input.match(/\[([0-9a-z_]+)\]$/g),i=!!e&&e[0].substring(1,e[0].length-1);i in a.fields&&a.fields[i].setError(t.message)}),t},deinitValidation:function(){this.getSaveButton().off("click",this._saveBtnClickHandler)},initValidation:function(){var t=this.$el.closest("form"),e=this.getSaveButton();acf.update("post_id",this.options.object_id),acf.addFilter("validation_complete",this.validationComplete,10,this),e.on("click",this._saveBtnClickHandler),t.data("acf",null),n.default._data(e[0],"events").click.reverse()},_saveBtnClickHandler:function(t){var e=(0,n.default)(this),i=(0,n.default)(this).closest("form");return!!acf.validateForm({form:i,event:!1,reset:!1,success:function(t){e.trigger("click")}})||(t.preventDefault(),t.stopPropagation(),t.stopImmediatePropagation(),!1)}}),d.form.QuickEdit=d.form.View.extend({loadValues:function(){var e=this,t=_.extend({},acf_qef.options.request,{object_id:this.options.object_id,acf_field_keys:this.getFieldsToLoad()});return n.default.post({url:ajaxurl,data:t,success:function(t){e.loadedValues(t.data)}}),this},getSaveButton:function(){return this.$el.closest("form").find("button.save")}}),d.form.BulkEdit=d.form.View.extend({initialize:function(){d.form.View.prototype.initialize.apply(this,arguments),acf.add_filter("prepare_for_ajax",this.prepareForAjax,null,this)},prepareForAjax:function(i){return i.acf&&n.default.each(i.acf,function(t,e){"___do_not_change"==e&&delete i.acf[t]}),i},loadValues:function(){var t=[];(0,n.default)('[type="checkbox"][name="post[]"]:checked').each(function(){t.push((0,n.default)(this).val())});var e=this,i=_.extend({},acf_qef.options.request,{object_id:t,acf_field_keys:this.getFieldsToLoad()});return n.default.post({url:ajaxurl,data:i,success:function(t){e.loadedValues(t.data)}}),this},getSaveButton:function(){return this.$('[type="submit"]#bulk_edit')}}),d.field.View=wp.media.View.extend({events:{'change [type="checkbox"][data-is-do-not-change="true"]':"dntChanged"},initialize:function(){var t=this;Backbone.View.prototype.initialize.apply(this,arguments),this.key=this.$el.attr("data-key"),this.parent_key=this.$el.attr("data-parent-key"),"false"===this.parent_key&&(this.parent_key=!1),this.$input||(this.$input=this.$('input:not([data-is-do-not-change="true"])')),this.setEditable(!1),this.$("*").on("change",function(){t.resetError()})},setValue:function(t){return this.dntChanged(),this.$input.val(t),this},dntChanged:function(){this.setEditable(!this.$('[type="checkbox"][data-is-do-not-change="true"]').is(":checked"))},setEditable:function(t){this.$input.prop("readonly",!t).prop("disabled",!t)},setError:function(t){return this.$el.attr("data-error-message",t),this},resetError:function(){return this.$el.removeAttr("data-error-message"),this},unload:function(){}}),i.exports=d}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],3:[function(a,o,t){(function(t){"use strict";var n=e("undefined"!=typeof window?window.jQuery:void 0!==t?t.jQuery:null),d=e(a("qef-base.js"));function e(t){return t&&t.__esModule?t:{default:t}}var i={type:"file",mediaFrameType:"",events:{"click .select-media":"selectFile","click .remove-media":"removeFile",'change [type="checkbox"][value="___do_not_change"]':"dntChanged"},initialize:function(){this.$input=this.$("button"),this.$hidden=this.$('[type="hidden"]'),d.default.field.View.prototype.initialize.apply(this,arguments);var i=this,t=acf.get("post_id");this.mediaFrameOpts={field:this.key,multiple:!1,post_id:t,library:this.$hidden.attr("data-library"),mode:"select",type:this.mediaFrameType,select:function(t,e){t&&i.setValue(t.get("id"))}},this.$hidden.data("mime_types")&&(this.mediaFrameOpts.mime_types=this.$hidden.data("mime_types"))},selectFile:function(t){t.preventDefault();var i=acf.media.popup(this.mediaFrameOpts),a=this.$hidden.val();a&&i.on("open",function(){var t,e;t=i.state().get("selection"),(e=wp.media.attachment(a)).fetch(),t.add(e?[e]:[])}),acf.isset(window,"wp","media","view","settings","post")&&n.default.isNumeric(this.mediaFrameOpts.post_id)&&(wp.media.view.settings.post.id=this.mediaFrameOpts.post_id)},removeFile:function(t){t.preventDefault(),this.setValue("")},setValue:function(t){return this.dntChanged(),this.$hidden.val(t),this}};d.default.field.add_type(i),d.default.field.add_type(_.extend(i,{type:"image",mediaFrameType:"image"})),d.default.field.add_type(i),d.default.field.add_type({type:"range",events:{'change [type="range"]':"adaptNumber",'mousemove [type="range"]':"adaptNumber",'change [type="number"]':"adaptRange",'mousemove [type="number"]':"adaptRange",'change [type="checkbox"][value="___do_not_change"]':"dntChanged"},adaptNumber:function(){this.$('[type="number"]').val(this.$('[type="range"]').val())},adaptRange:function(){this.$('[type="range"]').val(this.$('[type="number"]').val())}}),d.default.field.add_type({type:"date_picker",initialize:function(){var t=this;return this.$input=this.$('[type="text"]'),this.$hidden=this.$('[type="hidden"]'),d.default.field.View.prototype.initialize.apply(this,arguments),this.datePickerArgs={dateFormat:this.$("[data-date_format]").data("date_format"),altFormat:"yymmdd",altField:this.$hidden,changeYear:!0,yearRange:"-100:+100",changeMonth:!0,showButtonPanel:!0,firstDay:this.$("[data-first_day]").data("first_day")},this.$input.datepicker(this.datePickerArgs).on("blur",function(){(0,n.default)(this).val()||t.$hidden.val("")}),0<(0,n.default)("body > #ui-datepicker-div").length&&(0,n.default)("#ui-datepicker-div").wrap('<div class="acf-ui-datepicker" />'),this},setEditable:function(t){d.default.field.View.prototype.setEditable.apply(this,arguments),this.$hidden.prop("disabled",!t)},setValue:function(t){var e;this.dntChanged();try{e=n.default.datepicker.parseDate(this.datePickerArgs.altFormat,t)}catch(t){return this}return this.$input.datepicker("setDate",e),this}}),d.default.field.add_type({type:"date_time_picker",initialize:function(){var t=this;return this.$input=this.$('[type="text"]'),this.$hidden=this.$('[type="hidden"]'),d.default.field.View.prototype.initialize.apply(this,arguments),this.datePickerArgs={altField:this.$hidden,dateFormat:this.$("[data-date_format]").data("date_format"),altFormat:"yy-mm-dd",timeFormat:this.$("[data-time_format]").data("time_format"),altTimeFormat:"HH:mm:ss",altFieldTimeOnly:!1,changeYear:!0,yearRange:"-100:+100",changeMonth:!0,showButtonPanel:!0,firstDay:this.$("[data-first_day]").data("first_day"),controlType:"select",oneLine:!0},this.$input.datetimepicker(this.datePickerArgs).on("blur",function(){(0,n.default)(this).val()||t.$hidden.val("")}),0<(0,n.default)("body > #ui-datepicker-div").length&&(0,n.default)("#ui-datepicker-div").wrap('<div class="acf-ui-datepicker" />'),this},setEditable:function(t){d.default.field.View.prototype.setEditable.apply(this,arguments),this.$hidden.prop("disabled",!t)},setValue:function(t){var e,i,a;this.dntChanged();try{e=n.default.datepicker.parseDateTime(this.datePickerArgs.altFormat,this.datePickerArgs.altTimeFormat,t)}catch(t){return this}if(e)return a={hour:e.getHours(),minute:e.getMinutes(),second:e.getSeconds(),millisec:e.getMilliseconds(),microsec:0,timezone:e.getTimezoneOffset()},i=n.default.datepicker.formatDate(this.datePickerArgs.dateFormat,e)+" "+n.default.datepicker.formatTime(this.datePickerArgs.timeFormat,a),this.$hidden.val(i),this.$input.val(i),this}}),d.default.field.add_type({type:"time_picker",initialize:function(){var t=this;return this.$input=this.$('[type="text"]'),this.$hidden=this.$('[type="hidden"]'),d.default.field.View.prototype.initialize.apply(this,arguments),this.datePickerArgs={timeFormat:this.$("[data-time_format]").data("time_format"),altTimeFormat:"HH:mm:ss",altField:this.$hidden,altFieldTimeOnly:!1,showButtonPanel:!0,controlType:"select",oneLine:!0},this.$input.timepicker(this.datePickerArgs).on("blur",function(){(0,n.default)(this).val()||t.$hidden.val("")}),0<(0,n.default)("body > #ui-datepicker-div").length&&(0,n.default)("#ui-datepicker-div").wrap('<div class="acf-ui-datepicker" />'),this},setEditable:function(t){d.default.field.View.prototype.setEditable.apply(this,arguments),this.$hidden.prop("disabled",!t)},setValue:function(t){var e;this.dntChanged();try{e=n.default.datepicker.parseTime(this.datePickerArgs.altTimeFormat,t)}catch(t){return this}if(e)return this.$hidden.val(t),this.$input.val(n.default.datepicker.formatTime(this.datePickerArgs.timeFormat,e)),this}}),d.default.field.add_type({type:"color_picker",initialize:function(){var t=acf.apply_filters("color_picker_args",{defaultColor:!1,palettes:!0,hide:!0},this.$el);this.$input=this.$('[type="text"]').first().wpColorPicker(t),d.default.field.View.prototype.initialize.apply(this,arguments)},setValue:function(t){this.dntChanged(),this.$input.wpColorPicker("color",t)},unload:function(){(0,n.default)("body").off("click.wpcolorpicker")}}),d.default.field.add_type({type:"textarea",initialize:function(){this.$input=this.$("textarea").prop("readonly",!0),d.default.field.View.prototype.initialize.apply(this,arguments),this.$input.on("keydown keyup",function(t){13!=t.which&&27!=t.which||t.stopPropagation()})}}),d.default.field.add_type({type:"checkbox",events:{"click .add-choice":"addChoice",'change [type="checkbox"].custom':"removeChoice",'change [type="checkbox"][value="___do_not_change"]':"dntChanged"},initialize:function(){this.$input=this.$('[type="checkbox"]:not([value="___do_not_change"])'),this.$button=this.$("button.add-choice").prop("disabled",!0),d.default.field.View.prototype.initialize.apply(this,arguments)},setEditable:function(t){this.$input.prop("disabled",!t),this.$button.prop("disabled",!t)},setValue:function(t){var i=this;this.dntChanged(),n.default.isArray(t)?n.default.each(t,function(t,e){i.$('[type="checkbox"][value="'+e+'"]').prop("checked",!0)}):this.$('[type="checkbox"][value="'+t+'"]').prop("checked",!0)},addChoice:function(t){t.preventDefault();var e=wp.template("acf-qef-custom-choice-"+this.$el.attr("data-key"));this.$("ul").append(e())},removeChoice:function(t){(0,n.default)(t.target).closest("li").remove()}}),d.default.field.add_type({type:"link",events:{"click .select-link":"selectLink","click .remove-link":"resetLink"},initialize:function(){this.$input=this.$("[data-link-prop]"),d.default.field.View.prototype.initialize.apply(this,arguments),this.$display=this.$(".link-content")},resetLink:function(t){t.preventDefault(),this.$input.val(""),this.render()},selectLink:function(t){t.preventDefault(),acf.wpLink.open(this.$("a"))},setValue:function(t){var i=this;this.dntChanged(),n.default.each(t,function(t,e){return i.$('[data-link-prop="'+t+'"]').val(e)}),this.render()},render:function(){var t="",e=self.$('[data-link-prop="target"]').val(),i=self.$('[data-link-prop="url"]').val(),a=self.$('[data-link-prop="title"]').val()||i;i&&(e=e?'target="'.concat(e,'"'):"",t='<a href="'.concat(i,'"').concat(e,">").concat(a,"</a>")),this.$display.html(t)}}),d.default.field.add_type({type:"radio",initialize:function(){var e,i;this.$input=this.$('[type="radio"]'),d.default.field.View.prototype.initialize.apply(this,arguments),this.$('[type="radio"]').prop("readonly",!0),this.$("ul.acf-radio-list.other").length&&(e=this.$('[type="text"]'),this.$('[type="radio"]').on("change",function(t){i=(0,n.default)(this).is('[value="other"]:checked'),e.prop("disabled",!i).prop("readonly",!i)}))},setValue:function(t){this.dntChanged(),this.$('[type="radio"][value="'+t+'"]').prop("checked",!0)}}),d.default.field.add_type({type:"button_group",initialize:function(){this.$("ul");var a=this.$("li");this.$input=this.$('[type="radio"]'),d.default.field.View.prototype.initialize.apply(this,arguments),this.$('[type="radio"]').prop("readonly",!0),this.$el.is('[data-allow-null="1"]')&&this.$el.on("click",'[type="radio"]',function(t){var e=(0,n.default)(this).closest("li"),i=e.hasClass("selected");a.removeClass("selected"),i?(0,n.default)(this).prop("checked",!1):e.addClass("selected")})},setValue:function(t){this.dntChanged(),this.$('[type="radio"][value="'+t+'"]').prop("checked",!0).closest("li").addClass("selected")}}),d.default.field.add_type({type:"select",initialize:function(){d.default.field.View.prototype.initialize.apply(this,arguments),this.$input=this.$("select").prop("readonly",!0)}}),d.default.field.add_type({type:"taxonomy",initialize:function(){d.default.field.View.prototype.initialize.apply(this,arguments),this.$input=this.$('select,input[value!="___do_not_change"]').prop("readonly",!0)},setValue:function(t){var i=this;this.dntChanged(),"number"==typeof t&&(t=[t]),n.default.each(t,function(t,e){i.$('[value="'+e+'"]').each(function(t,e){(0,n.default)(this).is('[type="radio"],[type="checkbox"]')?(0,n.default)(this).prop("checked",!0):(0,n.default)(this).is("option")&&(0,n.default)(this).prop("selected",!0)})})}}),d.default.field.add_type({type:"true_false",initialize:function(){d.default.field.View.prototype.initialize.apply(this,arguments),this.$('[type="radio"]').prop("readonly",!0)},setValue:function(t){this.dntChanged(),this.$('[type="radio"][value="'+t+'"]').prop("checked",!0)}}),o.exports=d.default}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"qef-base.js":2}],4:[function(t,e,i){(function(t){"use strict";var e,i=(e="undefined"!=typeof window?window.jQuery:void 0!==t?t.jQuery:null)&&e.__esModule?e:{default:e};(0,i.default)(".acf-qef-gallery-col").on("mousemove",function(t){(0,i.default)(this);var e=(0,i.default)(this).find("img");x=t.offsetX,num=e.length,step=(0,i.default)(this).width()/num,e.each(function(t,e){x>=step*t?(0,i.default)(e).show():(0,i.default)(e).hide()})})}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}]},{},[1]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
