!function d(o,s,l){function r(t,e){if(!s[t]){if(!o[t]){var i="function"==typeof require&&require;if(!e&&i)return i(t,!0);if(u)return u(t,!0);var n=new Error("Cannot find module '"+t+"'");throw n.code="MODULE_NOT_FOUND",n}var a=s[t]={exports:{}};o[t][0].call(a.exports,function(e){return r(o[t][1][e]||e)},a,a.exports,d,o,s,l)}return s[t].exports}for(var u="function"==typeof require&&require,e=0;e<l.length;e++)r(l[e]);return r}({1:[function(e,t,i){(function(e){"use strict";var t,d=(t="undefined"!=typeof window?window.jQuery:void 0!==e?e.jQuery:null)&&t.__esModule?t:{default:t};(0,d.default)(".acf-qef-gallery-col").on("mousemove",function(e){(0,d.default)(this);var t=(0,d.default)(this).find("img"),i=e.offsetX,n=t.length,a=(0,d.default)(this).width()/n;t.each(function(e,t){a*e<=i?(0,d.default)(t).show():(0,d.default)(t).hide()})})}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],2:[function(c,e,t){(function(e){"use strict";var a,t,i,n,d,o,s,l=u("undefined"!=typeof window?window.jQuery:void 0!==e?e.jQuery:null),r=u(c("base.js"));function u(e){return e&&e.__esModule?e:{default:e}}function f(e){return(f="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}c("../acf-columns/index.js"),"undefined"!=typeof inlineEditPost&&(a=inlineEditPost.edit,t=inlineEditPost.save,i=inlineEditPost.revert,n=inlineEditPost.setBulk,inlineEditPost.edit=function(e){var t,i,n;return acf.validation.active=1,n=a.apply(this,arguments),t=0,"object"===f(e)&&(t=parseInt(this.getId(e))),i=(0,l.default)("#edit-"+t),this.acf_qed_form=new r.default.form.QuickEdit({el:i.get(0),object_id:t}),n},inlineEditPost.revert=function(){return this.acf_qed_form&&this.acf_qed_form.unload(),i.apply(this,arguments)},inlineEditPost.save=function(){return this.acf_qed_form&&this.acf_qed_form.unload(),t.apply(this,arguments)},inlineEditPost.setBulk=function(){var e=n.apply(this,arguments);return this.acf_qed_form=new r.default.form.BulkEdit({el:(0,l.default)("#bulk-edit").get(0)}),e}),"undefined"!=typeof inlineEditTax&&(d=inlineEditTax.edit,o=inlineEditTax.save,s=inlineEditTax.revert,inlineEditTax.edit=function(e){var t,i=(0,l.default)('input[name="taxonomy"]').val(),n=d.apply(this,arguments),a=0;return"object"===f(e)&&(a=parseInt(this.getId(e))),t=(0,l.default)("#edit-"+a),this.acf_qed_form=new r.default.form.QuickEdit({el:t.get(0),object_id:i+"_"+a}),n},inlineEditTax.revert=function(){return this.acf_qed_form&&this.acf_qed_form.unload(),s.apply(this,arguments)},inlineEditTax.save=function(){return this.acf_qed_form&&this.acf_qed_form.unload(),o.apply(this,arguments)})}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"../acf-columns/index.js":1,"base.js":3}],3:[function(d,o,e){(function(e){"use strict";var t=a("undefined"!=typeof window?window.jQuery:void 0!==e?e.jQuery:null),i=d("form.js"),n=a(d("fields.js"));function a(e){return e&&e.__esModule?e:{default:e}}t.default.extend(acf_qef,{form:i.form,field:n.default}),o.exports=acf_qef}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"fields.js":4,"form.js":21}],4:[function($,j,e){(function(e){"use strict";var n=m("undefined"!=typeof window?window.jQuery:void 0!==e?e.jQuery:null),t=m($("fields/button_group.js")),i=m($("fields/checkbox.js")),a=m($("fields/color_picker.js")),d=m($("fields/date_picker.js")),o=m($("fields/date_time_picker.js")),s=m($("fields/file.js")),l=m($("fields/image.js")),r=m($("fields/link.js")),u=m($("fields/post_object.js")),f=m($("fields/radio.js")),c=m($("fields/range.js")),p=m($("fields/select.js")),h=m($("fields/taxonomy.js")),y=m($("fields/textarea.js")),_=m($("fields/time_picker.js")),v=m($("fields/true_false.js"));function m(e){return e&&e.__esModule?e:{default:e}}var w=Object.assign({},p.default,{type:"user"}),g=wp.media.View.extend({events:{'change [type="checkbox"][data-is-do-not-change="true"]':"dntChanged"},initialize:function(){var e=this;Backbone.View.prototype.initialize.apply(this,arguments),this.key=this.$el.attr("data-key"),this.parent_key=this.$el.attr("data-parent-key"),"false"===this.parent_key&&(this.parent_key=!1),this.$input||(this.$input=this.$('input:not([data-is-do-not-change="true"])')),this.setEditable(!1),this.$("*").on("change",function(){e.resetError()})},setValue:function(e){return this.dntChanged(),this.$input.val(e),this},dntChanged:function(){this.setEditable(!this.$('[type="checkbox"][data-is-do-not-change="true"]').is(":checked"))},setEditable:function(i){this.$input.each(function(e,t){return(0,n.default)(t).prop("readonly",!i).prop("disabled",!i)})},setError:function(e){return this.$el.attr("data-error-message",e),this},resetError:function(){return this.$el.removeAttr("data-error-message"),this},unload:function(){},parent:function(){return g.prototype}}),b={},k={add_type:function(e){return b[e.type]=g.extend(e),b[e.type]},factory:function(e,t){var i=(0,n.default)(e).attr("data-field-type");return new(i in b?b[i]:g)({el:e,controller:t})},View:g};k.add_type(s.default),k.add_type(l.default),k.add_type(c.default),k.add_type(d.default),k.add_type(o.default),k.add_type(_.default),k.add_type(a.default),k.add_type(y.default),k.add_type(i.default),k.add_type(r.default),k.add_type(f.default),k.add_type(t.default),k.add_type(p.default),k.add_type(u.default),k.add_type(h.default),k.add_type(w),k.add_type(v.default),j.exports=k}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"fields/button_group.js":5,"fields/checkbox.js":6,"fields/color_picker.js":7,"fields/date_picker.js":8,"fields/date_time_picker.js":9,"fields/file.js":10,"fields/image.js":11,"fields/link.js":12,"fields/post_object.js":13,"fields/radio.js":14,"fields/range.js":15,"fields/select.js":16,"fields/taxonomy.js":17,"fields/textarea.js":18,"fields/time_picker.js":19,"fields/true_false.js":20}],5:[function(e,i,t){(function(e){"use strict";var t,a=(t="undefined"!=typeof window?window.jQuery:void 0!==e?e.jQuery:null)&&t.__esModule?t:{default:t};i.exports={type:"button_group",initialize:function(){this.$("ul");var n=this.$("li");this.$input=this.$('[type="radio"]'),this.parent().initialize.apply(this,arguments),this.$('[type="radio"]').prop("readonly",!0),this.$el.is('[data-allow-null="1"]')&&this.$el.on("click",'[type="radio"]',function(e){var t=(0,a.default)(this).closest("li"),i=t.hasClass("selected");n.removeClass("selected"),i?(0,a.default)(this).prop("checked",!1):t.addClass("selected")})},setValue:function(e){this.dntChanged(),this.$('[type="radio"][value="'+e+'"]').prop("checked",!0).closest("li").addClass("selected")}}}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],6:[function(e,a,t){(function(e){"use strict";var t,n=(t="undefined"!=typeof window?window.jQuery:void 0!==e?e.jQuery:null)&&t.__esModule?t:{default:t};var i={type:"checkbox",events:{"click .add-choice":"addChoice",'change [type="checkbox"].custom':"removeChoice"},initialize:function(){var t=this;this.$input=this.$('[type="checkbox"]:not([value="___do_not_change"])'),this.$button=this.$("button.add-choice").prop("disabled",!0),this.parent().initialize.apply(this,arguments),this.$('.acf-checkbox-toggle[type="checkbox"]').on("change",function(e){t.$('[type="checkbox"][value]').prop("checked",(0,n.default)(e.target).prop("checked"))})},setEditable:function(e){this.$input.prop("disabled",!e),this.$button.prop("disabled",!e)},setValue:function(e){var i=this;this.dntChanged(),n.default.isArray(e)?n.default.each(e,function(e,t){i.$('[type="checkbox"][value="'+t+'"]').prop("checked",!0)}):this.$('[type="checkbox"][value="'+e+'"]').prop("checked",!0)},addChoice:function(e){e.preventDefault();var t=wp.template("acf-qef-custom-choice-"+this.$el.attr("data-key"));this.$("ul").append(t())},removeChoice:function(e){(0,n.default)(e.target).closest("li").remove()}};i.events['change [type="checkbox"][value="'+acf_qef.options.do_not_change_value+'"]']="dntChanged",a.exports=i}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],7:[function(e,n,t){(function(e){"use strict";var t,i=(t="undefined"!=typeof window?window.jQuery:void 0!==e?e.jQuery:null)&&t.__esModule?t:{default:t};n.exports={type:"color_picker",initialize:function(){var e=acf.apply_filters("color_picker_args",{defaultColor:!1,palettes:!0,hide:!0},this.$el);this.$input=this.$('[type="text"]').first().wpColorPicker(e),this.parent().initialize.apply(this,arguments)},setEditable:function(e){this.parent().setEditable.apply(this,arguments),this.$("button.wp-color-result").prop("disabled",!e)},setValue:function(e){this.dntChanged(),this.$input.wpColorPicker("color",e)},unload:function(){(0,i.default)("body").off("click.wpcolorpicker")}}}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],8:[function(e,n,t){(function(e){"use strict";var t,i=(t="undefined"!=typeof window?window.jQuery:void 0!==e?e.jQuery:null)&&t.__esModule?t:{default:t};n.exports={type:"date_picker",initialize:function(){var e=this;return this.$input=this.$('[type="text"]'),this.$hidden=this.$('[type="hidden"]'),this.parent().initialize.apply(this,arguments),this.datePickerArgs={dateFormat:this.$("[data-date_format]").data("date_format"),altFormat:"yymmdd",altField:this.$hidden,changeYear:!0,yearRange:"-100:+100",changeMonth:!0,showButtonPanel:!0,firstDay:this.$("[data-first_day]").data("first_day")},this.$input.datepicker(this.datePickerArgs).on("blur",function(){(0,i.default)(this).val()||e.$hidden.val("")}),0<(0,i.default)("body > #ui-datepicker-div").length&&(0,i.default)("#ui-datepicker-div").wrap('<div class="acf-ui-datepicker" />'),this},setEditable:function(e){this.parent().setEditable.apply(this,arguments),this.$hidden.prop("disabled",!e)},setValue:function(e){var t;this.dntChanged();try{t=i.default.datepicker.parseDate(this.datePickerArgs.altFormat,e)}catch(e){return this}return this.$input.datepicker("setDate",t),this}}}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],9:[function(e,i,t){(function(e){"use strict";var t,a=(t="undefined"!=typeof window?window.jQuery:void 0!==e?e.jQuery:null)&&t.__esModule?t:{default:t};i.exports={type:"date_time_picker",initialize:function(){var e=this;return this.$input=this.$('[type="text"]'),this.$hidden=this.$('[type="hidden"]'),this.parent().initialize.apply(this,arguments),this.datePickerArgs={altField:this.$hidden,dateFormat:this.$("[data-date_format]").data("date_format"),altFormat:"yy-mm-dd",timeFormat:this.$("[data-time_format]").data("time_format"),altTimeFormat:"HH:mm:ss",altFieldTimeOnly:!1,changeYear:!0,yearRange:"-100:+100",changeMonth:!0,showButtonPanel:!0,firstDay:this.$("[data-first_day]").data("first_day"),controlType:"select",oneLine:!0},this.$input.datetimepicker(this.datePickerArgs).on("blur",function(){(0,a.default)(this).val()||e.$hidden.val("")}),0<(0,a.default)("body > #ui-datepicker-div").length&&(0,a.default)("#ui-datepicker-div").wrap('<div class="acf-ui-datepicker" />'),this},setEditable:function(e){this.parent().setEditable.apply(this,arguments),this.$hidden.prop("disabled",!e)},setValue:function(e){var t,i,n;this.dntChanged();try{t=a.default.datepicker.parseDateTime(this.datePickerArgs.altFormat,this.datePickerArgs.altTimeFormat,e)}catch(e){return this}if(t)return n={hour:t.getHours(),minute:t.getMinutes(),second:t.getSeconds(),millisec:t.getMilliseconds(),microsec:0,timezone:t.getTimezoneOffset()},i=a.default.datepicker.formatDate(this.datePickerArgs.dateFormat,t)+" "+a.default.datepicker.formatTime(this.datePickerArgs.timeFormat,n),this.$hidden.val(e),this.$input.val(i),this}}}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],10:[function(e,n,t){(function(e){"use strict";var t,a=(t="undefined"!=typeof window?window.jQuery:void 0!==e?e.jQuery:null)&&t.__esModule?t:{default:t};var i={type:"file",mediaFrameType:"",events:{"click .select-media":"selectFile","click .remove-media":"removeFile"},initialize:function(){this.$input=this.$("button"),this.$hidden=this.$('[type="hidden"]'),this.$img=(0,a.default)("<img />").prependTo(this.$(".file-content")),this.parent().initialize.apply(this,arguments);var t=this,e=acf.get("post_id");this.mediaFrameOpts={field:this.key,multiple:!1,post_id:e,library:this.$hidden.attr("data-library"),mode:"select",type:this.mediaFrameType,select:function(e){e&&t.setValue(e.get("id"))}},this.$hidden.data("mime_types")&&(this.mediaFrameOpts.mime_types=this.$hidden.data("mime_types"))},selectFile:function(e){e.preventDefault();var i=acf.media.popup(this.mediaFrameOpts),n=this.$hidden.val();n&&i.on("open",function(){var e=i.state().get("selection"),t=wp.media.attachment(n);t.fetch(),e.add(t?[t]:[])}),acf.isset(window,"wp","media","view","settings","post")&&a.default.isNumeric(this.mediaFrameOpts.post_id)&&(wp.media.view.settings.post.id=this.mediaFrameOpts.post_id)},removeFile:function(e){e.preventDefault(),this.setValue("")},setValue:function(e){var i=this;return this.dntChanged(),(e=parseInt(e))?(this.$hidden.val(e),wp.media.attachment(e).fetch().then(function(e){var t=e.sizes?e.sizes.thumbnail.url:e.icon;i.$img.attr("src",t),i.$(".media-mime").text(e.mime),i.$(".media-title").text(e.title)})):this.$hidden.val(""),this}};i.events['change [type="checkbox"][value="'+acf_qef.options.do_not_change_value+'"]']="dntChanged",n.exports=i}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],11:[function(e,t,i){"use strict";var n,a=(n=e("./file.js"))&&n.__esModule?n:{default:n};t.exports=_.extend({},a.default,{type:"image",mediaFrameType:"image"})},{"./file.js":10}],12:[function(e,a,t){(function(e){"use strict";var t,n=(t="undefined"!=typeof window?window.jQuery:void 0!==e?e.jQuery:null)&&t.__esModule?t:{default:t};var i={type:"link",events:{"click .select-link":"selectLink","click .remove-link":"resetLink"},initialize:function(){this.$input=this.$("[data-link-prop],button"),this.parent().initialize.apply(this,arguments),this.$display=this.$(".link-content")},resetLink:function(e){e.preventDefault(),this.$input.val(""),this.render()},selectLink:function(e){e.preventDefault();var t=this.$("a");t.length||(t=(0,n.default)("<a></a>").appendTo(this.$display)),(0,n.default)(document).on("wplink-close",this,this.parseCB),acf.wpLink.open(t)},setValue:function(e){var i=this;this.dntChanged(),n.default.each(e,function(e,t){return i.$('[data-link-prop="'+e+'"]').val(t)}),this.render()},parseCB:function(e){var t=e.data;setTimeout(function(){t.parse()},1),(0,n.default)(document).off("wplink-close",e.data.parseCB)},parse:function(){var e=this.$("a");this.$('[data-link-prop="target"]').val(e.attr("target")),this.$('[data-link-prop="url"]').val(e.attr("href")),this.$('[data-link-prop="title"]').val(e.html())},render:function(){var e="",t=this.$('[data-link-prop="target"]').val(),i=this.$('[data-link-prop="url"]').val(),n=this.$('[data-link-prop="title"]').val()||i;i&&(t=t?'target="'.concat(t,'"'):"",e='<a href="'.concat(i,'"').concat(t,">").concat(n,"</a>")),this.$display.html(e)}};i.events['change [type="checkbox"][value="'+acf_qef.options.do_not_change_value+'"]']="dntChanged",a.exports=i}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],13:[function(e,i,t){(function(e){"use strict";var t;(t="undefined"!=typeof window?window.jQuery:void 0!==e?e.jQuery:null)&&t.__esModule;i.exports={type:"post_object",initialize:function(){this.$input=this.$("select").prop("readonly",!0),this.parent().initialize.apply(this,arguments)},setValue:function(e){this.dntChanged();function t(e){i.$input.append(new Option(e.text,e.id,!0,!0))}var i=this;new acf.models.PostObjectField(this.$input.closest(".acf-field"));return _.isArray(e)?e.map(t):_.isObject(e)&&t(e),this}}}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],14:[function(e,i,t){(function(e){"use strict";var t,n=(t="undefined"!=typeof window?window.jQuery:void 0!==e?e.jQuery:null)&&t.__esModule?t:{default:t};i.exports={type:"radio",initialize:function(){var t,i;this.$input=this.$('[type="radio"]'),this.parent().initialize.apply(this,arguments),this.$('[type="radio"]').prop("readonly",!0),this.$("ul.acf-radio-list.other").length&&(t=this.$('[type="text"]'),this.$('[type="radio"]').on("change",function(e){i=(0,n.default)(this).is('[value="other"]:checked'),t.prop("disabled",!i).prop("readonly",!i)}))},setValue:function(e){this.dntChanged(),this.$('[type="radio"][value="'+e+'"]').prop("checked",!0)}}}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],15:[function(e,n,t){(function(e){"use strict";var t;(t="undefined"!=typeof window?window.jQuery:void 0!==e?e.jQuery:null)&&t.__esModule;var i={type:"range",events:{'change [type="range"]':"adaptNumber",'mousemove [type="range"]':"adaptNumber",'change [type="number"]':"adaptRange",'mousemove [type="number"]':"adaptRange"},adaptNumber:function(){this.$('[type="number"]').val(this.$('[type="range"]').val())},adaptRange:function(){this.$('[type="range"]').val(this.$('[type="number"]').val())}};i.events['change [type="checkbox"][value="'+acf_qef.options.do_not_change_value+'"]']="dntChanged",n.exports=i}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],16:[function(e,i,t){(function(e){"use strict";var t;(t="undefined"!=typeof window?window.jQuery:void 0!==e?e.jQuery:null)&&t.__esModule;i.exports={type:"select",initialize:function(){this.parent().initialize.apply(this,arguments),this.$input=this.$("select").prop("readonly",!0)}}}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],17:[function(e,i,t){(function(e){"use strict";var t;(t="undefined"!=typeof window?window.jQuery:void 0!==e?e.jQuery:null)&&t.__esModule;i.exports={type:"taxonomy",initialize:function(){this.parent().initialize.apply(this,arguments),this.$input=this.$('select,input[value!="'+acf_qef.options.do_not_change_value+'"]').prop("readonly",!0)},setValue:function(e){this.dntChanged();function t(e){i?n.$input.append(new Option(e.text,e.id,!0,!0)):n.$input.filter('[value="'.concat(e.id,'"]')).prop("checked",!0)}var i=this.$input.is("select"),n=this;new acf.models.TaxonomyField(this.$input.closest(".acf-field"));_.isArray(e)?e.map(t):_.isObject(e)&&t(e)}}}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],18:[function(e,i,t){(function(e){"use strict";var t;(t="undefined"!=typeof window?window.jQuery:void 0!==e?e.jQuery:null)&&t.__esModule;i.exports={type:"textarea",initialize:function(){this.$input=this.$("textarea").prop("readonly",!0),this.parent().initialize.apply(this,arguments),this.$input.on("keydown keyup",function(e){13!=e.which&&27!=e.which||e.stopPropagation()})}}}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],19:[function(e,n,t){(function(e){"use strict";var t,i=(t="undefined"!=typeof window?window.jQuery:void 0!==e?e.jQuery:null)&&t.__esModule?t:{default:t};n.exports={type:"time_picker",initialize:function(){var e=this;return this.$input=this.$('[type="text"]'),this.$hidden=this.$('[type="hidden"]'),this.parent().initialize.apply(this,arguments),this.datePickerArgs={timeFormat:this.$("[data-time_format]").data("time_format"),altTimeFormat:"HH:mm:ss",altField:this.$hidden,altFieldTimeOnly:!1,showButtonPanel:!0,controlType:"select",oneLine:!0},this.$input.timepicker(this.datePickerArgs).on("blur",function(){(0,i.default)(this).val()||e.$hidden.val("")}),0<(0,i.default)("body > #ui-datepicker-div").length&&(0,i.default)("#ui-datepicker-div").wrap('<div class="acf-ui-datepicker" />'),this},setEditable:function(e){this.parent().setEditable.apply(this,arguments),this.$hidden.prop("disabled",!e)},setValue:function(e){var t;this.dntChanged();try{t=i.default.datepicker.parseTime(this.datePickerArgs.altTimeFormat,e)}catch(e){return this}if(t)return this.$hidden.val(e),this.$input.val(i.default.datepicker.formatTime(this.datePickerArgs.timeFormat,t)),this}}}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],20:[function(e,i,t){(function(e){"use strict";var t;(t="undefined"!=typeof window?window.jQuery:void 0!==e?e.jQuery:null)&&t.__esModule;i.exports={type:"true_false",initialize:function(){this.parent().initialize.apply(this,arguments),this.$('[type="radio"]').prop("readonly",!0)},setValue:function(e){this.dntChanged(),!0!==e&&!1!==e||this.$('[type="radio"][value="'+Number(e)+'"]').prop("checked",!0)}}}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],21:[function(l,r,e){(function(e){"use strict";var t,a=(t="undefined"!=typeof window?window.jQuery:void 0!==e?e.jQuery:null)&&t.__esModule?t:{default:t},d=l("fields.js");function o(e){return(o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}var i=Backbone.View.extend({events:{"heartbeat-send.wp-refresh-nonces":"heartbeatListener"},initialize:function(e){var n=this;this.active=!0,this.options=e,Backbone.View.prototype.initialize.apply(this,arguments),this.fields={},this.$(".inline-edit-col-qed [data-key]").each(function(e,t){var i=(0,d.factory)(t,this);n.fields[i.key]=i}),Object.keys(this.fields).length&&this.loadValues()},getFieldsToLoad:function(){var i=[];return _.each(this.fields,function(e,t){i.push(e.key)}),i},loadedValues:function(e){this.active&&(this._setValues(e),this.initValidation())},_setValues:function(e){var i=this;_.each(e,function(e,t){t in i.fields?i.fields[t].setValue(e):_.isObject(e)&&i._setValues(e)})},unload:function(){this.deinitValidation(),_.each(this.fields,function(e){e.unload()}),this.active=!1,acf.unload.reset()},validationComplete:function(e){var n=this;return e.valid?acf.unload.off():_.each(e.errors,function(e){var t=e.input.match(/\[([0-9a-z_]+)\]$/g),i=!!t&&t[0].substring(1,t[0].length-1);i in n.fields&&n.fields[i].setError(e.message)}),e},deinitValidation:function(){this.getSaveButton().off("click",this._saveBtnClickHandler)},initValidation:function(){var e=this.$el.closest("form"),t=this.getSaveButton();t.length&&(acf.update("post_id",this.options.object_id),acf.addFilter("validation_complete",this.validationComplete,10,this),t.on("click",this._saveBtnClickHandler),e.data("acf",null),a.default._data(t[0],"events").click.reverse())},_saveBtnClickHandler:function(e){var t=(0,a.default)(this),i=(0,a.default)(this).closest("form");return!!acf.validateForm({form:i,event:!1,reset:!1,success:function(){t.trigger("click")}})||(e.preventDefault(),e.stopPropagation(),e.stopImmediatePropagation(),!1)}}),n=i.extend({loadValues:function(){var t=this,e=_.extend({},acf_qef.options.request,{object_id:this.options.object_id,acf_field_keys:this.getFieldsToLoad(),_wp_http_referrer:(0,a.default)('[name="_wp_http_referer"]:first').val()});return a.default.post({url:ajaxurl,data:e,success:function(e){t.loadedValues(e.data)}}),this},getSaveButton:function(){return this.$el.closest("form").find("button.save")}}),s=i.extend({initialize:function(){i.prototype.initialize.apply(this,arguments),acf.add_filter("prepare_for_ajax",this.prepareForAjax,null,this)},prepareForAjax:function(e){return e.acf&&function i(n){a.default.each(n,function(e,t){t==acf_qef.options.do_not_change_value?delete n[e]:"object"===o(t)&&i(t)})}(e.acf),e},loadValues:function(){var e=[];(0,a.default)('[type="checkbox"][name="post[]"]:checked').each(function(){e.push((0,a.default)(this).val())});var t=this,i=_.extend({},acf_qef.options.request,{object_id:e,acf_field_keys:this.getFieldsToLoad(),_wp_http_referrer:(0,a.default)('[name="_wp_http_referer"]:first').val()});return a.default.post({url:ajaxurl,data:i,success:function(e){t.loadedValues(e.data)}}),this},getSaveButton:function(){return this.$('[type="submit"]#bulk_edit')}});r.exports={form:{BulkEdit:s,QuickEdit:n}}}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"fields.js":4}]},{},[2]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
